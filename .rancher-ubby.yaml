apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    field.cattle.io/creatorId: user-7wkl2
    field.cattle.io/publicEndpoints: '[{"addresses":["34.69.145.7"],"port":31940,"protocol":"TCP","serviceName":"p-wmzhw-pipeline:ubby2-nodeport","allNodes":true}]'
  creationTimestamp: "2020-04-05T10:49:21Z"
  generation: 4
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-p-wmzhw-pipeline-ubby2
  name: ubby2
  namespace: p-wmzhw-pipeline
  resourceVersion: "367107"
  selfLink: /apis/apps/v1/namespaces/p-wmzhw-pipeline/deployments/ubby2
  uid: 5b74b7b3-b038-4304-aa12-2ec562b0810e
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-p-wmzhw-pipeline-ubby2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-05T11:46:30Z"
        field.cattle.io/ports: '[[{"containerPort":3010,"dnsName":"ubby2-nodeport","hostPort":0,"kind":"NodePort","name":"api","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-p-wmzhw-pipeline-ubby2
    spec:
      containers:
        - env:
            - name: ENVY_LOCAL
              value: "12213"
            - name: COUCHBASE_URL
              valueFrom:
                secretKeyRef:
                  key: COUCHBASE_URL
                  name: couchbase
                  optional: false
            - name: .env_staging
              valueFrom:
                configMapKeyRef:
                  key: .env_staging
                  name: dot-env
                  optional: false
          envFrom:
            - secretRef:
                name: pipeline-secret
          image: ubuntu:xenial
          imagePullPolicy: Always
          name: ubby2
          ports:
            - containerPort: 3010
              name: api
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /var/nao
              name: vol1
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 256
            items:
              - key: .env
                path: .env
            name: dot-env
            optional: false
          name: vol1
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: "2020-04-05T10:49:23Z"
      lastUpdateTime: "2020-04-05T10:49:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2020-04-05T10:49:21Z"
      lastUpdateTime: "2020-04-05T11:46:34Z"
      message: ReplicaSet "ubby2-869ff6484d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 4
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
