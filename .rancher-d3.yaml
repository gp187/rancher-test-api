apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-7wkl2
    field.cattle.io/publicEndpoints: '[{"addresses":["34.67.169.65"],"port":30192,"protocol":"TCP","serviceName":"p-trdwk-pipeline:d3-nodeport","allNodes":true}]'
  creationTimestamp: "2020-04-05T13:54:20Z"
  generation: 2
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-p-trdwk-pipeline-d3
  name: d3
  namespace: p-trdwk-pipeline
  resourceVersion: "22794"
  selfLink: /apis/apps/v1/namespaces/p-trdwk-pipeline/deployments/d3
  uid: 6c31f635-f99b-44b4-b898-ee5537d1ce93
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-p-trdwk-pipeline-d3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-05T13:54:20Z"
        field.cattle.io/ports: '[[{"containerPort":3010,"dnsName":"d3-nodeport","hostPort":0,"kind":"NodePort","name":"api","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-p-trdwk-pipeline-d3
    spec:
      containers:
        - image: 127.0.0.1:34069/direct-med-supplies-api:8
          imagePullPolicy: Always
          name: d3
          ports:
            - containerPort: 3010
              name: api
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: pipeline-docker-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: "2020-04-05T13:54:20Z"
      lastUpdateTime: "2020-04-05T13:54:57Z"
      message: ReplicaSet "d3-5f8cb58d4b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2020-04-05T13:56:00Z"
      lastUpdateTime: "2020-04-05T13:56:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
